name: Spring Boot CI/CD with Gradle

on:
  push:
    branches:
      - "feature/**"
      - "master"

env:
  DOCKER_HUB_REPO: sshaunn/stupid-louis
  IMAGE_TAG: ${{ github.sha }}

jobs:
#  build:
#    runs-on: ubuntu-22.04
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: setup
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: setup gradle
#        uses: gradle/gradle-build-action@v2
#
#      - name: define shell permit
#        run: chmod +x ./gradlew
#
#      - name: build
#        run: ./gradlew clean build
#
#      - name: login
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_TOKEN }}
#
#      - name: build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: 'true'
#          tags: |
#            ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_TAG }}
#            ${{ env.DOCKER_HUB_REPO }}:latest
#          file: ./Dockerfile

  deploy-infrastructure:
#    needs: build
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: 'ap-southeast-2'
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.10.0'

      - name: permit terraform script
        run: chmod +x ./scripts/terraform-eks.sh

      - name: init terraform
        run: ./scripts/terraform-eks.sh init

      - name: plan terraform
        run: ./scripts/terraform-eks.sh plan

      - name: apply terraform
        run: ./scripts/terraform-eks.sh apply


